@using PagedList.Mvc;
@model ControllerWeb.ViewModels.FabricanteViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Fabricante</h2>

<fieldset class="fieldset">
    <div class="form-horizontal">
        <div class="row  pull-right">
            <div class="col-xs-12">
                @*<input type="submit" id="btnPesquisar" name="Index" value="Pesquisar" class="btn btn-mod-gray" />*@
                @Html.ActionLink("Novo Fabricante", "Create", "", new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
</fieldset>
<p></p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Nome)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ativo)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.FabricantesPaginados) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Nome)
        </td>
        <td>
            @*@Html.DisplayFor(modelItem => item.Ativo)*@
            @{
                if (item.Ativo)
                {
                    @Html.Raw("Sim");
                }
                else
                {
                    @Html.Raw("Não");
                }
            }


        </td>
        <td>
            @Html.ActionLink(" ", "Edit", new { id = item.IdFabricante }, new { @class = "fa fa-pencil-square-o fa-lg", @title = "Alterar Fabricante" }) |
            @Html.ActionLink(" ", "Details", new { id = item.IdFabricante }, new { @class = "fa fa-file-text-o fa-lg ", @title = "Detalhes do Fabricante" }) 
            @*@Html.ActionLink(" ", "Delete", new { id = item.IdFabricante }, new { @class = "fa fa-trash-o fa-lg", @title = "Excluir Fabricante" })*@
        </td>
    </tr>
}

</table>
@Html.PagedListPager(Model.FabricantesPaginados, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<div class="pull-right"> Total de Registros: @Html.Raw(@Html.Raw(ViewBag.TotalRegistros))</div>

