@model Domain.Entities.Venda

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Venda</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdVenda)

        <div class="form-group">
            @Html.Label("Código", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Data da Venda", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DataVenda, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBox("DataVenda", @String.Format("{0:dd/MM/yyyy}", @Model.DataVenda), new { @class = "form-control", @style = "width:100px", @maxlength = 20 })
                @Html.ValidationMessageFor(model => model.DataVenda, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Vendedor", new { @class = "control-label col-md-2" })
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vendedor.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdVendedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar" class="btn btn-primary" />
                @Html.ActionLink("Voltar", "Index", "", new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
